var scrap=require('scrap');
var Job = require('../models/job');

exports.scrapAllJobs = function(req,res){
  /* initialisation des bail*/
  var _arrayOfJobs = [];
  var _numberOfPages=1;
  scrapurl(_numberOfPages,res);
}

function scrapurl(_numberOfPages,res){
  var url = "https://remixjobs.com/?page="+_numberOfPages+"&in=all"
  console.log(url);

  scrap(url,function(err,$){

    if(err){
      console.log(err);
      return;
    }
    else{
      console.log("PAGE NUMBER : "+_numberOfPages);

      $('.jobs-list').find('li').each(function(i,row){
        //creation de l'objet job a sauvegarder
        var job = new Job();


        //lien du descriptif du job
        var link = $(this).find('.job-title .job-link').attr('href');


        //instançiation de l'objet job

        job.title = $(this).find('.job-title').text().trim();
        job.company = $(this).find('.company').text();
        job.localization= $(this).find('.workplace').text();
        job.category= link.split('/')[2];
        job.contract = $(this).find('.contract').text().trim();
        /*traitement de la date*/
        var datestring = $(this).find('.job-details-right').text();
        job.date = parseDate(datestring);

        //job.date = new Date(req.body.date);
        /*recuperer chaque tag pour le push dans le tableau de tag*/
          $(this).find('.tag').find('a').each(function(i,row){
            job.tags.push($(this).text().trim());
          });
        console.log("ligne - "+i);
        scrapdesc_and_saveit("https://remixjobs.com"+link,job,i,( ($('.jobs-list').find('li').length)-1) ,_numberOfPages);

			});
    }

  });

}
function scrapdesc_and_saveit(url,job,i,i_max,_numberOfPages){
  //console.log('getting desc');
  //console.log(url);
  scrap(url,function(err,$){
    if(err){
      console.log(err);
    }
    job.description = $('.job-description').text();
    job.save(function(err){
      if(err)res.send(err);
    });
    if(i==i_max){
      _numberOfPages++;
      scrapurl(_numberOfPages);
    }
  });
}

//utils functions
function parseDate(date){
var months = ["jan.", "fev.", "mars.", "avr.", "mai.", "juin.", "juil.", "août.", "sept.", "oct.", "nov.", "déc."]
arrayOfdate = date.split(" ");

var monthNumber = months.indexOf(arrayOfdate[1]) + 1 ;
  if(monthNumber != -1 ){
    var datebuilder = arrayOfdate[2]+"/"+monthNumber+"/"+arrayOfdate[0];
    console.log(datebuilder);
    return new Date(datebuilder);
  }
  else{
    return new Date();
  }
}
